{
  "version": 3,
  "sources": ["../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/MonotoneXTension.js", "../../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/MonotoneYTension.js"],
  "sourcesContent": ["/**\r\n * @ignore\r\n */\nexport class MonotoneXTension {\n  constructor(context, tension) {\n    Object.defineProperty(this, \"_line\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_point\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_context\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_x0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_x1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_t0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_tension\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    this._context = context;\n    this._tension = tension;\n  }\n  areaStart() {\n    this._line = 0;\n  }\n  areaEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n    this._point = 0;\n  }\n  lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n        break;\n      case 3:\n        point(this, this._t0, slope2(this, this._t0));\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n  point(x, y) {\n    let t1 = NaN;\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        point(this, slope2(this, t1 = slope3(this, x, y)), t1);\n        break;\n      default:\n        point(this, this._t0, t1 = slope3(this, x, y));\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function curveMonotoneXTension(tension) {\n  function monotoneXTension(context) {\n    return new MonotoneXTension(context, tension);\n  }\n  return monotoneXTension;\n}\n/**\r\n * @ignore\r\n */\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n/**\r\n * @ignore\r\n */\nfunction slope3(that, x2, y2) {\n  let h0 = that._x1 - that._x0;\n  let h1 = x2 - that._x1;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n/**\r\n * @ignore\r\n */\nfunction slope2(that, t) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n/**\r\n * @ignore\r\n */\nfunction point(that, t0, t1) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n", "/**\r\n * @ignore\r\n */\nexport class MonotoneYTension {\n  constructor(context, tension) {\n    Object.defineProperty(this, \"_line\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_point\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_context\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_x0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_x1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_t0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_tension\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    this._context = context;\n    this._tension = tension;\n  }\n  areaStart() {\n    this._line = 0;\n  }\n  areaEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n    this._point = 0;\n  }\n  lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n        break;\n      case 3:\n        point(this, this._t0, slope2(this, this._t0));\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n  point(x, y) {\n    [x, y] = [y, x];\n    let t1 = NaN;\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(y, x) : this._context.moveTo(y, x);\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        point(this, slope2(this, t1 = slope3(this, x, y)), t1);\n        break;\n      default:\n        point(this, this._t0, t1 = slope3(this, x, y));\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function curveMonotoneYTension(tension) {\n  function monotoneYTension(context) {\n    return new MonotoneYTension(context, tension);\n  }\n  monotoneYTension.tension = function (tension) {\n    return curveMonotoneYTension(+tension);\n  };\n  return monotoneYTension;\n}\n/**\r\n * @ignore\r\n */\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n/**\r\n * @ignore\r\n */\nfunction slope3(that, x2, y2) {\n  let h0 = that._x1 - that._x0;\n  let h1 = x2 - that._x1;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n/**\r\n * @ignore\r\n */\nfunction slope2(that, t) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n/**\r\n * @ignore\r\n */\nfunction point(that, t0, t1) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(y0 + dx * t0, x0 + dx, y1 - dx * t1, x1 - dx, y1, x1);\n}\n"],
  "mappings": "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",
  "names": ["point", "slope2", "slope3", "tension", "sign"]
}
